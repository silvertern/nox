buildscript {
	ext.kotlin_version = '1.2.31'
	repositories.jcenter()
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}
apply plugin: 'kotlin'

plugins.apply(IdeaPlugin)
plugins.apply(MavenPlugin)
apply(plugin: "java-gradle-plugin")
apply(plugin: "kotlin")

version = "0.18.3"
group = "com.silvertern.gradle"

jar.manifest.attributes (
	"Implementation-Version": version,
	"Implementation-Title": "Equinox Platform and Build Plugin",
)

gradlePlugin {
	plugins {
		noxplatform {
			id = "nox.Platform"
			implementationClass = "nox.Platform"
		}
		noxosgi {
			id = "nox.OSGi"
			implementationClass = "nox.OSGi"
		}
		aspectj {
			id = "nox.AspectJ"
			implementationClass = "nox.AspectJ"
		}
	}
}

repositories.jcenter()

dependencies {
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")

	compile("org.slf4j:slf4j-api:1.7.10")
	compile("com.google.guava:guava:21.0")
	compile("org.apache.commons:commons-lang3:3.5")
	compile("com.google.code.findbugs:annotations:3.0.1")
	compile("biz.aQute.bnd:biz.aQute.bndlib:3.2.0")
	compile("commons-io:commons-io:2.5")
	compile("com.fasterxml.jackson.core:jackson-databind:2.7.3")
	compile("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.7.3")

	testCompile("junit:junit:4.12")

	runtime("org.codehaus.woodstox:woodstox-core-asl:4.4.1")
}

task("sourcesJar", type: Jar, dependsOn: classes) {
	classifier = "sources"
	from(sourceSets.main.allSource)
}

javadoc {
	failOnError false
}

task("javadocJar", type: Jar, dependsOn: javadoc) {
	classifier = "javadoc"
	from(javadoc.destinationDir)
}

artifacts.add("archives", sourcesJar)
artifacts.add("archives", javadocJar)
repositories {
	mavenCentral()
}
compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
